package javathsiaproject;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import neurone.Neurone;
import neurone.NeuroneSigmoide;
import neurone.iNeurone;

import static javathsiaproject.sonToModuleFFT.convertSonModule;

public class main {
    public static void main (String[] args) {

        float nbTests = 0;
        float nbErreursSinusoide = 0;
        float nbErreursCarre = 0;

        // Tableau des entrées
        final float[][] entrees = {convertSonModule("app/src/main/resources/audio/Sinusoide.wav"),convertSonModule("app/src/main/resources/audio/Carre.wav")};

        // Tableaux des sorties Sinusoide et Carré
        final float[] resultatsSinusoide = {1,0};
        final float[] resultatsCarre = {0,1};


        final iNeurone neuroneSinusoide = new NeuroneSigmoide(entrees[0].length);
        final iNeurone neuroneCarre = new NeuroneSigmoide(entrees[1].length);

        System.out.println("Apprentissage…");

        // Apprentissage sinusoide
        System.out.println("Apprentissage sinusoide : "+neuroneSinusoide.apprentissage(entrees, resultatsSinusoide));
        // Apprentissage carré
        System.out.println("Apprentissage carré : "+neuroneCarre.apprentissage(entrees, resultatsCarre));

        final Neurone neuroneS = (Neurone)neuroneSinusoide;
        final Neurone neuroneC = (Neurone)neuroneCarre;

        for (int i = 0; i < entrees.length; ++i)
        {
            // Pour une entrée donné
            final float[] entree = entrees[i];
            // On met à jour la sortie du neurone
            neuroneSinusoide.metAJour(entrees[i]);
            neuroneCarre.metAJour(entrees[i]);

            //if(neuroneSinusoide.sortie() <= resultatsSinusoide[i]*0.5f){ nbErreursSinusoide += 1; }
            if (resultatsSinusoide[i] == 1 ? neuroneSinusoide.sortie() < 0.5f : neuroneSinusoide.sortie() >= 0.5f) { nbErreursSinusoide += 1; }

            //if(neuroneCarre.sortie() <= resultatsCarre[i]*0.5f){ nbErreursCarre += 1; }
            if(resultatsCarre[i] == 1 ? neuroneCarre.sortie() < 0.5f : neuroneCarre.sortie() >= 0.5f) { nbErreursCarre += 1; }

            nbTests += 1;

        }

        System.out.println("========================================");
        System.out.println("Pourcentage de réussite Sinusoide: "+(1.f-(nbErreursSinusoide/nbTests))*100+"%");
        System.out.println("Pourcentage de réussite Carre: "+(1.f-(nbErreursCarre/nbTests))*100+"%");
        System.out.println("========================================");

    }
}

